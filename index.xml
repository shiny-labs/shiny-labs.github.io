<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on shiny-labs</title>
    <link>https://shiny-labs.re/</link>
    <description>Recent content in Blog on shiny-labs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>shiny-labs@kylma.fr (shiny-labs)</managingEditor>
    <webMaster>shiny-labs@kylma.fr (shiny-labs)</webMaster>
    <lastBuildDate>Sun, 23 Feb 2020 20:19:35 +0100</lastBuildDate>
    
	<atom:link href="https://shiny-labs.re/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Vulnhub - Kioptrix 1 (#1)</title>
      <link>https://shiny-labs.re/posts/200411-vulnhub-kioptrix-1/</link>
      <pubDate>Sat, 11 Apr 2020 14:27:27 +0200</pubDate>
      <author>shiny-labs@kylma.fr (shiny-labs)</author>
      <guid>https://shiny-labs.re/posts/200411-vulnhub-kioptrix-1/</guid>
      <description>First post in the pentest category, we take a trip through time and try to break into one of the oldest box to root: Kioptrix.
Trying to break these box with a kali 2020 is a bit of a challenge as most of the stuff is ancient and has been dropped from all modern distributions, including kali. Expect lots of fixing :D
Fixing the network of Kioptrix After importing the Kioptrix VM to VMware, I had troubles changing the network adapter from bridge to NAT.</description>
    </item>
    
    <item>
      <title>PicoCTF 2019 - Stringzz</title>
      <link>https://shiny-labs.re/posts/200229-picoctf-stringzz/</link>
      <pubDate>Sun, 29 Mar 2020 22:13:58 +0200</pubDate>
      <author>shiny-labs@kylma.fr (shiny-labs)</author>
      <guid>https://shiny-labs.re/posts/200229-picoctf-stringzz/</guid>
      <description>Description  Use a format string to pwn this program and get a flag. Its also found in /problems/stringzz_6_5f0e31bfd7b9a7c6a32d22b6d57e9010 on the shell server. Source.
 Hint: http://www.cis.syr.edu/~wedu/Teaching/cis643/LectureNotes_New/Format_String.pdf
Solution Let&amp;rsquo;s check the source code first:
#include &amp;lt;stdio.h&amp;gt;#include &amp;lt;stdlib.h&amp;gt;#include &amp;lt;string.h&amp;gt; #define FLAG_BUFFER 128 #define LINE_BUFFER_SIZE 2000  void printMessage3(char *in) { puts(&amp;#34;will be printed:\n&amp;#34;); printf(in); } void printMessage2(char *in) { puts(&amp;#34;your input &amp;#34;); printMessage3(in); } void printMessage1(char *in) { puts(&amp;#34;Now &amp;#34;); printMessage2(in); } int main (int argc, char **argv) { puts(&amp;#34;input whatever string you want; then it will be printed back:\n&amp;#34;); int read; unsigned int len; char *input = NULL; getline(&amp;amp;input, &amp;amp;len, stdin); //There is no win function, but the flag is wandering in the memory!</description>
    </item>
    
    <item>
      <title>OverTheWire - Bandit Levels 10 to 19</title>
      <link>https://shiny-labs.re/posts/200315-overthewire-bandit-09-19/</link>
      <pubDate>Sun, 15 Mar 2020 11:17:31 +0100</pubDate>
      <author>shiny-labs@kylma.fr (shiny-labs)</author>
      <guid>https://shiny-labs.re/posts/200315-overthewire-bandit-09-19/</guid>
      <description>Bandit Level 10 → Level 11 Level Goal The password for the next level is stored in the file data.txt, which contains base64 encoded data
Commands you may need to solve this level grep, sort, uniq, strings, base64, tr, tar, gzip, bzip2, xxd
Helpful Reading Material  Base64 on Wikipedia  Solution So the password is encoded using base64? Let&amp;rsquo;s checkout the command with the same name ~~
bandit10@bandit:~$ cat data.</description>
    </item>
    
    <item>
      <title>OverTheWire - Bandit Levels 00 to 09</title>
      <link>https://shiny-labs.re/posts/200315-overthewire-bandit-00-09/</link>
      <pubDate>Sun, 15 Mar 2020 11:08:54 +0100</pubDate>
      <author>shiny-labs@kylma.fr (shiny-labs)</author>
      <guid>https://shiny-labs.re/posts/200315-overthewire-bandit-00-09/</guid>
      <description>This week-end, I tried https://overthewire.org/wargames/bandit/ which is aimed at absolute beginners and teach the basics.
Bandit Level 0 Level Goal The goal of this level is for you to log into the game using SSH. The host to which you need to connect is bandit.labs.overthewire.org, on port 2220. The username is bandit0 and the password is bandit0. Once logged in, go to the Level 1 page to find out how to beat Level 1.</description>
    </item>
    
    <item>
      <title>24/7 CTF - The Secret Lock</title>
      <link>https://shiny-labs.re/posts/200229-247ctf-the-secret-lock/</link>
      <pubDate>Sat, 29 Feb 2020 21:44:37 +0100</pubDate>
      <author>shiny-labs@kylma.fr (shiny-labs)</author>
      <guid>https://shiny-labs.re/posts/200229-247ctf-the-secret-lock/</guid>
      <description>Description  Can you reverse the secret combination to open the lock and recover the flag?
 Solution The archive contains only one file named The Secret Lock.html&amp;hellip; Oh dear, a web page! Where&amp;rsquo;s my binary? :(((
On the HTML page, we are greeted by a impressive lock with a blinking &amp;ldquo;locked&amp;rdquo; message.
That&amp;rsquo;s some hardcore combination lock. Hope you don&amp;rsquo;t have one of those on your luggage&amp;hellip;
class Lock { constructor() { this.</description>
    </item>
    
    <item>
      <title>Archives</title>
      <link>https://shiny-labs.re/archives/</link>
      <pubDate>Sun, 23 Feb 2020 20:19:35 +0100</pubDate>
      <author>shiny-labs@kylma.fr (shiny-labs)</author>
      <guid>https://shiny-labs.re/archives/</guid>
      <description></description>
    </item>
    
    <item>
      <title>PicoCTF 2019 - General Skills</title>
      <link>https://shiny-labs.re/posts/200223-picoctf-general-skills/</link>
      <pubDate>Sun, 23 Feb 2020 09:15:49 +0100</pubDate>
      <author>shiny-labs@kylma.fr (shiny-labs)</author>
      <guid>https://shiny-labs.re/posts/200223-picoctf-general-skills/</guid>
      <description>Let&amp;rsquo;s Warm Up [50] Description  If I told you a word started with 0x70 in hexadecimal, what would it start with in ASCII?
 Solution A look at the ASCII manual should help!
$ man ascii Then, it&amp;rsquo;s just a matter of finding the right line, the one that has 70 in the Hex column.
Oct Dec Hex Char Oct Dec Hex Char ──────────────────────────────────────────────────────────────────────── [...] 060 48 30 0 160 112 70 p Flag: picoCTF{p}</description>
    </item>
    
    <item>
      <title>24/7 CTF - The More The Merrier</title>
      <link>https://shiny-labs.re/posts/200212-247ctf-the-more-the-merrier/</link>
      <pubDate>Wed, 12 Feb 2020 20:49:07 +0100</pubDate>
      <author>shiny-labs@kylma.fr (shiny-labs)</author>
      <guid>https://shiny-labs.re/posts/200212-247ctf-the-more-the-merrier/</guid>
      <description>Description  One byte is great. But what if you need more? Can you find the flag hidden in this binary?
 Solution $ file the_more_the_merrier the_more_the_merrier: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/l, for GNU/Linux 3.2.0, BuildID[sha1]=0f750d638337391328fa7432dd362189de908c1e, stripped $ ./the_more_the_merrier Nothing to see here.. Wow wow, calm down, I can&amp;rsquo;t follow with all the output! So&amp;hellip; Running the binary isn&amp;rsquo;t quite the definition of excitement&amp;hellip;</description>
    </item>
    
    <item>
      <title>Infosec Institute - n00bs CTF Labs Writeup</title>
      <link>https://shiny-labs.re/posts/200201-infosecinstitute-n00bs-ctf-writeup/</link>
      <pubDate>Sat, 01 Feb 2020 14:42:01 +0100</pubDate>
      <author>shiny-labs@kylma.fr (shiny-labs)</author>
      <guid>https://shiny-labs.re/posts/200201-infosecinstitute-n00bs-ctf-writeup/</guid>
      <description>_____ _____ _ _____ ___________ _ _ | _ || _ | | / __ \_ _| ___| | | | | _ __ | |/&amp;#39; || |/&amp;#39; | |__ ___ | / \/ | | | |_ | | __ _| |__ ___ | &amp;#39;_ \| /| || /| | &amp;#39;_ \/ __| | | | | | _| | | / _` | &amp;#39;_ \/ __| | | | \ |_/ /\ |_/ / |_) \__ \ | \__/\ | | | | | |___| (_| | |_) \__ \ |_| |_|\___/ \___/|_.</description>
    </item>
    
    <item>
      <title>GoogleCTF Beginner&#39;s Quest 2019 - Drive to the Target</title>
      <link>https://shiny-labs.re/posts/190814-googlectf-beginners-drive-to-the-target/</link>
      <pubDate>Wed, 14 Aug 2019 15:18:44 +0200</pubDate>
      <author>shiny-labs@kylma.fr (shiny-labs)</author>
      <guid>https://shiny-labs.re/posts/190814-googlectf-beginners-drive-to-the-target/</guid>
      <description>Description  Excellent work! With your fine sleuthing skills, you managed to find a picture of the handsome creature with its pet biped. At last friends and companionship may be near!
Like all inhabitants of this world, you spend an inordinate amount of time on the site, stalking and comparing your life to that of others. The first thought that springs to your mind is &amp;ldquo;Why haven&amp;rsquo;t I ever been to Mauritius on holiday?</description>
    </item>
    
    <item>
      <title>GoogleCTF Beginner&#39;s Quest 2019 - Stop GAN</title>
      <link>https://shiny-labs.re/posts/190813-googlectf-beginners-stop-gan/</link>
      <pubDate>Tue, 13 Aug 2019 16:34:23 +0200</pubDate>
      <author>shiny-labs@kylma.fr (shiny-labs)</author>
      <guid>https://shiny-labs.re/posts/190813-googlectf-beginners-stop-gan/</guid>
      <description>Description  Success, you&amp;rsquo;ve gotten the picture of your lost love, not knowing that pictures and the things you take pictures of are generally two separate things, you think you&amp;rsquo;ve rescue them and their brethren by downloading them all to your ships hard drive. They&amp;rsquo;re still being eaten, but this is a fact that has escaped you entirely. Your thoughts swiftly shift to revenge. It&amp;rsquo;s important now to stop this program from destroying these &amp;ldquo;Cauliflowers&amp;rdquo; as they&amp;rsquo;re referred to, ever again.</description>
    </item>
    
    <item>
      <title>GoogleCTF Beginner&#39;s Quest 2019 - Government Agriculture Network</title>
      <link>https://shiny-labs.re/posts/190806-googlectf-beginners-government-agriculture-network/</link>
      <pubDate>Tue, 06 Aug 2019 15:28:01 +0200</pubDate>
      <author>shiny-labs@kylma.fr (shiny-labs)</author>
      <guid>https://shiny-labs.re/posts/190806-googlectf-beginners-government-agriculture-network/</guid>
      <description>Description  Well it seems someone can&amp;rsquo;t keep their work life and their home life separate. You vaguely recall on your home planet, posters put up everywhere that said &amp;ldquo;Loose Zips sink large commercial properties with a responsibility to the shareholders.&amp;rdquo; You wonder if there is a similar concept here.
Using the credentials to access this so-called Agricultural network, you realize that SarahH was just hired as a vendor or contract worker and given access that was equivalent.</description>
    </item>
    
    <item>
      <title>GoogleCTF Beginner&#39;s Quest 2019 - FriendSpaceBookPlusAllAccessRedPremium.com</title>
      <link>https://shiny-labs.re/posts/190727-googlectf-beginners-friendspacebookplusallaccessredpremium.com/</link>
      <pubDate>Sat, 27 Jul 2019 09:10:27 +0200</pubDate>
      <author>shiny-labs@kylma.fr (shiny-labs)</author>
      <guid>https://shiny-labs.re/posts/190727-googlectf-beginners-friendspacebookplusallaccessredpremium.com/</guid>
      <description>Description  Having snooped around like the expert spy you were never trained to be, you found something that takes your interest: &amp;ldquo;Cookie/www.FriendSpaceBookPlusAllAccessRedPremium.com&amp;rdquo; But unbeknownst to you, it was only the 700nm Wavelength herring rather than a delicious cookie that you could have found. It looks exactly like a credential for another system. You find yourself in search of a friendly book to read. Having already spent some time trying to find a way to gain more intelligence&amp;hellip; and learn about those fluffy creatures, you (several)-momentarily divert your attention here.</description>
    </item>
    
    <item>
      <title>GoogleCTF Beginner&#39;s Quest 2019 - Work Computer</title>
      <link>https://shiny-labs.re/posts/190724-googlectf-beginners-work-computer/</link>
      <pubDate>Wed, 24 Jul 2019 21:12:06 +0200</pubDate>
      <author>shiny-labs@kylma.fr (shiny-labs)</author>
      <guid>https://shiny-labs.re/posts/190724-googlectf-beginners-work-computer/</guid>
      <description>Description  With the confidence of conviction and decision making skills that made you a contender for Xenon&amp;rsquo;s Universal takeover council, now disbanded, you forge ahead to the work computer. This machine announces itself to you, surprisingly with a detailed description of all its hardware and peripherals. Your first thought is &amp;ldquo;Why does the display stand need to announce its price? And exactly how much does 999 dollars convert to in Xenonivian Bucklets?</description>
    </item>
    
    <item>
      <title>GoogleCTF Beginner&#39;s Quest 2019 - Home Computer</title>
      <link>https://shiny-labs.re/posts/190724-googlectf-beginners-home-computer/</link>
      <pubDate>Wed, 24 Jul 2019 11:53:22 +0200</pubDate>
      <author>shiny-labs@kylma.fr (shiny-labs)</author>
      <guid>https://shiny-labs.re/posts/190724-googlectf-beginners-home-computer/</guid>
      <description>Description  Blunderbussing your way through the decision making process, you figure that one is as good as the other and that further research into the importance of Work Life balance is of little interest to you. You&amp;rsquo;re the decider after all. You confidently use the credentials to access the &amp;ldquo;Home Computer.&amp;rdquo; Something called &amp;ldquo;desktop&amp;rdquo; presents itself, displaying a fascinating round and bumpy creature (much like yourself) labeled &amp;ldquo;cauliflower 4 work - GAN post.</description>
    </item>
    
    <item>
      <title>GoogleCTF Beginner&#39;s Quest 2019 - Satellite // Introduction to Reversing Go Binaries</title>
      <link>https://shiny-labs.re/posts/190722-googlectf-beginners-satellite/</link>
      <pubDate>Mon, 22 Jul 2019 10:03:43 +0200</pubDate>
      <author>shiny-labs@kylma.fr (shiny-labs)</author>
      <guid>https://shiny-labs.re/posts/190722-googlectf-beginners-satellite/</guid>
      <description>I picked the binary of the challenge satellite from Google CTF beginner&amp;rsquo;s quest 2019 as a first target to learn go reversing.
Description  Placing your ship in range of the Osmiums, you begin to receive signals. Hoping that you are not detected, because it&amp;rsquo;s too late now, you figure that it may be worth finding out what these signals mean and what information might be &amp;ldquo;borrowed&amp;rdquo; from them. Can you hear me Captain Tim?</description>
    </item>
    
    <item>
      <title>GoogleCTF Beginner&#39;s Quest 2019 - Ad</title>
      <link>https://shiny-labs.re/posts/190720-googlectf-beginners-2019-ad/</link>
      <pubDate>Sat, 20 Jul 2019 11:56:22 +0200</pubDate>
      <author>shiny-labs@kylma.fr (shiny-labs)</author>
      <guid>https://shiny-labs.re/posts/190720-googlectf-beginners-2019-ad/</guid>
      <description>Description of the challenge:  We interrupt this program for a commercial break
https://www.youtube.com/watch?v=QzFuwljOj8Y
 Solving A flag is hidden in the youtube video:
Flag: CTF{9e796ca74932912c216a1cd00c25c84fae00e139}</description>
    </item>
    
    <item>
      <title>GoogleCTF Beginner&#39;s Quest 2019 - Enter Space-Time Coordinates</title>
      <link>https://shiny-labs.re/posts/190719-googlectf-beginners-2019-enter-space-time-coordinates/</link>
      <pubDate>Fri, 19 Jul 2019 23:53:22 +0200</pubDate>
      <author>shiny-labs@kylma.fr (shiny-labs)</author>
      <guid>https://shiny-labs.re/posts/190719-googlectf-beginners-2019-enter-space-time-coordinates/</guid>
      <description>Description  Ok well done. The console is on. It&amp;rsquo;s asking for coordinates. Beating heavily on the console yields little results, but the only time anything changes on your display is when you put in numbers.. So what numbers are you going to go for? You see the starship&amp;rsquo;s logs, but is there a manual? Or should you just keep beating the console?
 Solving Here we go!
$ file 00c2a73eec8abb4afb9c3ef3a161b64b451446910535bfc0cc81c2b04aa132ed 00c2a73eec8abb4afb9c3ef3a161b64b451446910535bfc0cc81c2b04aa132ed: Zip archive data, at least v2.</description>
    </item>
    
    <item>
      <title>Creditz</title>
      <link>https://shiny-labs.re/credits/</link>
      <pubDate>Fri, 12 Jul 2019 19:16:00 +0200</pubDate>
      <author>shiny-labs@kylma.fr (shiny-labs)</author>
      <guid>https://shiny-labs.re/credits/</guid>
      <description>This blog runs on Hugo, a fantastic open-source static site generator in -you guessed it- go.
Articles which helped me:
 How to Build Custom Hugo Pagination Howto limit the number of posts on the homepage CSS Smooth Scroll Demo Table of Contents Create an archive page  CSS The theme of this blog is built using two CSS frameworks:
 bulma papercss  The glitch effect of the logo comes from this codepen</description>
    </item>
    
    <item>
      <title>Debugging with GDB in IDA Linux</title>
      <link>https://shiny-labs.re/posts/190711-debugging-gdb-ida-linux/</link>
      <pubDate>Thu, 11 Jul 2019 21:46:12 +0200</pubDate>
      <author>shiny-labs@kylma.fr (shiny-labs)</author>
      <guid>https://shiny-labs.re/posts/190711-debugging-gdb-ida-linux/</guid>
      <description>There are tons of tutorial telling you how to debug with gdb and IDA Windows, but what about IDA Linux eh?
How does debugging work? IDALinux doesn&amp;rsquo;t have real local debugging :(( A debug server stub is used to relay information between IDA and the debugger.
And Breakpoints?
Breakpoints are implemented using software interrupts or traps:
More precisely, they are implemented by the trap int 3, ie trap to debugger.</description>
    </item>
    
    <item>
      <title>Disassemble a Specific Function</title>
      <link>https://shiny-labs.re/posts/190517-disassemble-specific-function/</link>
      <pubDate>Fri, 17 May 2019 10:32:35 +0200</pubDate>
      <author>shiny-labs@kylma.fr (shiny-labs)</author>
      <guid>https://shiny-labs.re/posts/190517-disassemble-specific-function/</guid>
      <description>Have you ever tried to disassemble only one function with objdump?
Let&amp;rsquo;s take a tiny code which prints the result of an addition function:
#include &amp;lt;stdio.h&amp;gt;#include &amp;lt;stdint.h&amp;gt; uint32_t add(uint32_t a, uint32_t b) { return a + b; } int main(int argc, char* argv[]) { uint32_t result = add(1300, 37); printf(&amp;#34;result is %i\n&amp;#34;, result); return 0; } Compile it and run it:
$ gcc add.c -g -o add $ ./add result is 1337 Let&amp;rsquo;s now try to dump only one specific function, for example, add.</description>
    </item>
    
    <item>
      <title>Lattice Diamond Tutorial: Project FrankANDstein</title>
      <link>https://shiny-labs.re/posts/190416-lattice-diamond-tutorial/</link>
      <pubDate>Tue, 16 Apr 2019 16:41:27 +0200</pubDate>
      <author>shiny-labs@kylma.fr (shiny-labs)</author>
      <guid>https://shiny-labs.re/posts/190416-lattice-diamond-tutorial/</guid>
      <description>The goal of this mini-project is to create and simulate a full project for Lattice Diamond, from start to end.
As a test subject, we will use the AND gate. We will create our own frankANDstein gate and give it liiiiiife.
Installation /!\ I didn&amp;rsquo;t read the fine prints before installing, but short story, the simulator Active HDL is not included on the Linux version of Lattice Diamond. So find yourself a Windows box :(.</description>
    </item>
    
    <item>
      <title>Phoenix: Stack Four</title>
      <link>https://shiny-labs.re/posts/190129-phoenix-stack-4/</link>
      <pubDate>Tue, 29 Jan 2019 12:14:31 +0100</pubDate>
      <author>shiny-labs@kylma.fr (shiny-labs)</author>
      <guid>https://shiny-labs.re/posts/190129-phoenix-stack-4/</guid>
      <description>Goal: Execute the function complete_level by modifying the saved return address, and pointing it to the complete_level() function.
Source code:
/* * phoenix/stack-four, by https://exploit.education * * The aim is to execute the function complete_level by modifying the * saved return address, and pointing it to the complete_level() function. * * Why were the apple and orange all alone? Because the bananna split. */ #include &amp;lt;err.h&amp;gt;#include &amp;lt;stdio.h&amp;gt;#include &amp;lt;stdlib.h&amp;gt;#include &amp;lt;string.h&amp;gt;#include &amp;lt;unistd.h&amp;gt; #define BANNER \ &amp;#34;Welcome to &amp;#34; LEVELNAME &amp;#34;, brought to you by https://exploit.</description>
    </item>
    
    <item>
      <title>Phoenix: Stack Three</title>
      <link>https://shiny-labs.re/posts/190129-phoenix-stack-3/</link>
      <pubDate>Tue, 29 Jan 2019 00:07:59 +0100</pubDate>
      <author>shiny-labs@kylma.fr (shiny-labs)</author>
      <guid>https://shiny-labs.re/posts/190129-phoenix-stack-3/</guid>
      <description>Goal: execute the complete_level function.
Source code:
/* * phoenix/stack-three, by https://exploit.education * * The aim is to change the contents of the changeme variable to 0x0d0a090a * * When does a joke become a dad joke? * When it becomes apparent. * When it&amp;#39;s fully groan up. * */ #include &amp;lt;err.h&amp;gt;#include &amp;lt;stdio.h&amp;gt;#include &amp;lt;stdlib.h&amp;gt;#include &amp;lt;string.h&amp;gt;#include &amp;lt;unistd.h&amp;gt; #define BANNER \ &amp;#34;Welcome to &amp;#34; LEVELNAME &amp;#34;, brought to you by https://exploit.education&amp;#34;  char *gets(char *); void complete_level() { printf(&amp;#34;Congratulations, you&amp;#39;ve finished &amp;#34; LEVELNAME &amp;#34; :-) Well done!</description>
    </item>
    
    <item>
      <title>Phoenix: Stack Two</title>
      <link>https://shiny-labs.re/posts/190128-phoenix-stack-2/</link>
      <pubDate>Mon, 28 Jan 2019 18:21:05 +0100</pubDate>
      <author>shiny-labs@kylma.fr (shiny-labs)</author>
      <guid>https://shiny-labs.re/posts/190128-phoenix-stack-2/</guid>
      <description>Goal: change the contents of the changeme variable to 0x0d0a090a
Source code:
/* * phoenix/stack-two, by https://exploit.education * * The aim is to change the contents of the changeme variable to 0x0d0a090a * * If you&amp;#39;re Russian to get to the bath room, and you are Finnish when you get * out, what are you when you are in the bath room? * * European! */ #include &amp;lt;err.h&amp;gt;#include &amp;lt;stdio.h&amp;gt;#include &amp;lt;stdlib.h&amp;gt;#include &amp;lt;string.</description>
    </item>
    
    <item>
      <title>Phoenix: Stack One</title>
      <link>https://shiny-labs.re/posts/190128-phoenix-stack-1/</link>
      <pubDate>Mon, 28 Jan 2019 18:14:41 +0100</pubDate>
      <author>shiny-labs@kylma.fr (shiny-labs)</author>
      <guid>https://shiny-labs.re/posts/190128-phoenix-stack-1/</guid>
      <description>Goal: Modify the value of the changeme variable to 0x496c5962
Source code:
/* * phoenix/stack-one, by https://exploit.education * * The aim is to change the contents of the changeme variable to 0x496c5962 * * Did you hear about the kid napping at the local school? * It&amp;#39;s okay, they woke up. * */ #include &amp;lt;err.h&amp;gt;#include &amp;lt;stdio.h&amp;gt;#include &amp;lt;stdlib.h&amp;gt;#include &amp;lt;string.h&amp;gt;#include &amp;lt;unistd.h&amp;gt; #define BANNER \ &amp;#34;Welcome to &amp;#34; LEVELNAME &amp;#34;, brought to you by https://exploit.</description>
    </item>
    
    <item>
      <title>Phoenix: Stack Zero</title>
      <link>https://shiny-labs.re/posts/190128-phoenix-stack-0/</link>
      <pubDate>Mon, 28 Jan 2019 18:04:45 +0100</pubDate>
      <author>shiny-labs@kylma.fr (shiny-labs)</author>
      <guid>https://shiny-labs.re/posts/190128-phoenix-stack-0/</guid>
      <description>Goal: modify the content of the changeme variable.
Source code:
/* * phoenix/stack-zero, by https://exploit.education * * The aim is to change the contents of the changeme variable. * * Scientists have recently discovered a previously unknown species of * kangaroos, approximately in the middle of Western Australia. These * kangaroos are remarkable, as their insanely powerful hind legs give them * the ability to jump higher than a one story house (which is approximately * 15 feet, or 4.</description>
    </item>
    
    <item>
      <title>Phoenix: Getting Started</title>
      <link>https://shiny-labs.re/posts/190128-phoenix-getting-started/</link>
      <pubDate>Mon, 28 Jan 2019 16:41:16 +0100</pubDate>
      <author>shiny-labs@kylma.fr (shiny-labs)</author>
      <guid>https://shiny-labs.re/posts/190128-phoenix-getting-started/</guid>
      <description>VM setup I&amp;rsquo;m using a Ubuntu 64-bit VM with VMware.
Download the AMD64 debian packages from https://exploit.education/downloads/ and install it with:
# dpkg -i exploit-education-phoenix_1.0.0-_amd64.deb Once the package is installed, the binaries are in /opt/phoenix/&amp;lt;arch&amp;gt;.
GDB setup Install the gef plugin from https://github.com/hugsy/gef (you need a GDB &amp;gt;= 7.7 with Python 2 or 3 bindings):
$ wget -O ~/.gdbinit-gef.py -q https://github.com/hugsy/gef/raw/master/gef.py $ echo source ~/.gdbinit-gef.py &amp;gt;&amp;gt; ~/.gdbinit On first-time install, it should spew:</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://shiny-labs.re/about/</link>
      <pubDate>Mon, 28 Jan 2019 14:30:46 +0100</pubDate>
      <author>shiny-labs@kylma.fr (shiny-labs)</author>
      <guid>https://shiny-labs.re/about/</guid>
      <description>Huh, hello I guess?
Questions, suggestions, you-wrote-something-wrong, shoot me a DM on twitter.
Stuff I can&amp;rsquo;t shut up about:
 cats (obviously) bouldering fancy PCBs books  </description>
    </item>
    
  </channel>
</rss>